var searchIndex = {};
searchIndex["cursive"] = {"doc":"Cursive","items":[[3,"Printer","cursive","Convenient interface to draw on a subset of the screen.",null,null],[12,"offset","","Offset into the window this printer should start drawing at.",0,null],[12,"size","","Size of the area we are allowed to draw on.",0,null],[12,"focused","","Whether the view to draw is currently focused or not.",0,null],[12,"theme","","Currently used theme",0,null],[3,"XY","","A generic structure with a value for each axis.",null,null],[12,"x","","X-axis value",1,null],[12,"y","","Y-axis value",1,null],[3,"Cursive","","Central part of the cursive library.",null,null],[0,"traits","","Commonly used traits bundled for easy import.",null,null],[0,"event","","User-input events and their effects.",null,null],[3,"Callback","cursive::event","Callback is a function that can be triggered by an event. It has a mutable access to the cursive root.",null,null],[4,"EventResult","","Answer to an event notification. The event can be consumed or ignored.",null,null],[13,"Ignored","","The event was ignored. The parent can keep handling it.",2,null],[13,"Consumed","","The event was consumed. An optionnal callback to run is attached.",2,null],[4,"Key","","A non-character key on the keyboard",null,null],[13,"Enter","","Both Enter (or Return) and numpad Enter",3,null],[13,"Tab","","Tabulation key",3,null],[13,"Backspace","","Backspace key",3,null],[13,"Esc","","Escape key",3,null],[13,"Left","","Left arrow",3,null],[13,"Right","","Right arrow",3,null],[13,"Up","","Up arrow",3,null],[13,"Down","","Down arrow",3,null],[13,"Ins","","Insert key",3,null],[13,"Del","","Delete key",3,null],[13,"Home","","Home key",3,null],[13,"End","","End key",3,null],[13,"PageUp","","Page Up key",3,null],[13,"PageDown","","Page Down key",3,null],[13,"PauseBreak","","Pause Break key",3,null],[13,"NumpadCenter","","The 5 in the center of the keypad, when numlock is disabled.",3,null],[13,"F0","","F0 key",3,null],[13,"F1","","F1 key",3,null],[13,"F2","","F2 key",3,null],[13,"F3","","F3 key",3,null],[13,"F4","","F4 key",3,null],[13,"F5","","F5 key",3,null],[13,"F6","","F6 key",3,null],[13,"F7","","F7 key",3,null],[13,"F8","","F8 key",3,null],[13,"F9","","F9 key",3,null],[13,"F10","","F10 key",3,null],[13,"F11","","F11 key",3,null],[13,"F12","","F12 key",3,null],[4,"Event","","Represents an event as seen by the application.",null,null],[13,"WindowResize","","Event fired when the window is resized.",4,null],[13,"Refresh","","Event fired regularly when a auto-refresh is set.",4,null],[13,"Char","","A character was entered (includes numbers, punctuation, ...).",4,null],[13,"CtrlChar","","A character was entered with the Ctrl key pressed.",4,null],[13,"AltChar","","A character was entered with the Alt key pressed.",4,null],[13,"Key","","A non-character key was pressed.",4,null],[13,"Shift","","A non-character key was pressed with the Shift key pressed.",4,null],[13,"Alt","","A non-character key was pressed with the Alt key pressed.",4,null],[13,"AltShift","","A non-character key was pressed with the Shift and Alt keys pressed.",4,null],[13,"Ctrl","","A non-character key was pressed with the Ctrl key pressed.",4,null],[13,"CtrlShift","","A non-character key was pressed with the Ctrl and Shift keys pressed.",4,null],[13,"CtrlAlt","","A non-character key was pressed with the Ctrl and Alt keys pressed.",4,null],[13,"Unknown","","An unknown event was received.",4,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"callback"}}],[11,"from_fn","","Wraps the given function into a `Callback` object.",5,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"deref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"from","","",5,{"inputs":[{"name":"rc"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"with_cb","","Convenient method to create `Consumed(Some(f))`",2,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"is_consumed","","Returns `true` if `self` is `EventResult::Consumed`.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"process","","Process this result if it is a callback.",2,{"inputs":[{"name":"self"},{"name":"cursive"}],"output":null}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"key"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"key"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_f","","Returns the function key corresponding to the given number",3,{"inputs":[{"name":"u8"}],"output":{"name":"key"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"char"}],"output":{"name":"event"}}],[11,"from","","",4,{"inputs":[{"name":"key"}],"output":{"name":"event"}}],[0,"view","cursive","Base elements required to build views.",null,null],[3,"ScrollBase","cursive::view","Provide scrolling functionalities to a view.",null,null],[12,"start_line","","First line visible",6,null],[12,"content_height","","Content height",6,null],[12,"view_height","","Number of lines displayed",6,null],[12,"scrollbar_offset","","Padding for the scrollbar",6,null],[12,"right_padding","","Blank between the text and the scrollbar.",6,null],[3,"SizeCache","","Cache around a one-dimensional layout result.",null,null],[12,"value","","Cached value",7,null],[12,"constrained","","`true` if the last size was constrained.",7,null],[3,"ViewPath","","Represents a path to a single view in the layout.",null,null],[12,"path","","List of turns to make on decision nodes when descending the view tree. Simple nodes (with one fixed child) are skipped.",8,null],[4,"Offset","","Single-dimensional offset policy.",null,null],[13,"Center","","In the center of the screen",9,null],[13,"Absolute","","Place top-left corner at the given absolute coordinates",9,null],[13,"Parent","","Offset from the previous layer's top-left corner.",9,null],[4,"ScrollStrategy","","Defines the scrolling behaviour on content or size change",null,null],[13,"KeepRow","","Keeps the same row number",10,null],[13,"StickToTop","","Sticks to the top.",10,null],[13,"StickToBottom","","Sticks to the bottom of the view.",10,null],[4,"SizeConstraint","","Single-dimensional constraint on a view size.",null,null],[13,"Free","","No constraint imposed, the child view's response is used.",11,null],[13,"Full","","Tries to take all available space, no matter what the child needs.",11,null],[13,"Fixed","","Always return the included size, no matter what the child needs.",11,null],[13,"AtMost","","Returns the minimum of the included value and the child view's size.",11,null],[13,"AtLeast","","Returns the maximum of the included value and the child view's size.",11,null],[4,"Selector","","Selects a single view (if any) in the tree.",null,null],[13,"Id","","Selects a view from its ID.",12,null],[13,"Path","","Selects a view from its path.",12,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"compute_offset","","Computes a single-dimension offset requred to draw a view.",9,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"sizecache"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"sizecache"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sizecache"}}],[11,"new","","Creates a new sized cache",7,{"inputs":[{"name":"usize"},{"name":"bool"}],"output":{"name":"self"}}],[11,"accept","","Returns `true` if `self` is still valid for the given `request`.",7,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"build","","Creates a new bi-dimensional cache.",7,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"xy"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sizeconstraint"}}],[11,"available","","Returns the size to be given to the child.",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"result","","Returns the size the child view should actually use.",11,null],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new empty path.",8,{"inputs":[],"output":{"name":"self"}}],[11,"from","","Creates a path from the given item.",8,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"scrollbase"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new, uninitialized scrollbar.",6,{"inputs":[],"output":{"name":"self"}}],[11,"scrollbar_offset","","Shifts the scrollbar toward the inside of the view.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"right_padding","","Sets the number of blank cells between the text and the scrollbar.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"set_heights","","Call this method whem the content or the view changes.",6,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"scrollable","","Returns `TRUE` if the view needs to scroll.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"can_scroll_up","","Returns `TRUE` unless we are at the top.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"can_scroll_down","","Returns `TRUE` unless we are at the bottom.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"scroll_top","","Scroll to the top of the view.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"scroll_to","","Makes sure that the given line is visible, scrolling if needed.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"scroll_bottom","","Scroll to the bottom of the view.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"scroll_down","","Scroll down by the given number of line.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"scroll_up","","Scroll up by the given number of lines.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"draw","","Draws the scroll bar and the content using the given drawer.",6,{"inputs":[{"name":"self"},{"name":"printer"},{"name":"f"}],"output":null}],[6,"Position","","Location of the view on screen",null,null],[8,"Boxable","","Makes a view wrappable in a [`BoxView`].",null,null],[11,"boxed","","Wraps `self` in a `BoxView` with the given size constraints.",13,{"inputs":[{"name":"self"},{"name":"sizeconstraint"},{"name":"sizeconstraint"}],"output":{"name":"boxview"}}],[11,"fixed_size","","Wraps `self` into a fixed-size `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"boxview"}}],[11,"fixed_width","","Wraps `self` into a fixed-width `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"fixed_height","","Wraps `self` into a fixed-width `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"full_screen","","Wraps `self` into a full-screen `BoxView`.",13,{"inputs":[{"name":"self"}],"output":{"name":"boxview"}}],[11,"full_width","","Wraps `self` into a full-width `BoxView`.",13,{"inputs":[{"name":"self"}],"output":{"name":"boxview"}}],[11,"full_height","","Wraps `self` into a full-height `BoxView`.",13,{"inputs":[{"name":"self"}],"output":{"name":"boxview"}}],[11,"max_size","","Wraps `self` into a limited-size `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"boxview"}}],[11,"max_width","","Wraps `self` into a limited-width `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"max_height","","Wraps `self` into a limited-height `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"min_size","","Wraps `self` into a `BoxView` at least sized `size`.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"boxview"}}],[11,"min_width","","Wraps `self` in a `BoxView` at least `min_width` wide.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"min_height","","Wraps `self` in a `BoxView` at least `min_height` tall.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[8,"Identifiable","","Makes a view wrappable in an [`IdView`].",null,null],[11,"with_id","","Wraps this view into an `IdView` with the given id.",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"idview"}}],[8,"ViewWrapper","","Generic wrapper around a view.",null,null],[16,"V","","Type that this view wraps.",15,null],[10,"with_view","","Get an immutable reference to the wrapped view.",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[10,"with_view_mut","","Get a mutable reference to the wrapped view.",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_draw","","Wraps the `draw` method.",15,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"wrap_required_size","","Wraps the `required_size` method.",15,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"wrap_on_event","","Wraps the `on_event` method.",15,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"wrap_layout","","Wraps the `layout` method.",15,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"wrap_take_focus","","Wraps the `take_focus` method.",15,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"wrap_find_any","","Wraps the `find` method.",15,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"wrap_focus_view","","Wraps the `focus_view` method.",15,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"wrap_needs_relayout","","Wraps the `needs_relayout` method.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"View","","Main trait defining a view behaviour.",null,null],[11,"on_event","","Called when a key was pressed.",16,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"required_size","","Returns the minimum size the view requires with the given restrictions.",16,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"needs_relayout","","Returns `true` if the view content changed since last layout phase.",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"layout","","Called once the size for this view has been decided,",16,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[10,"draw","","Draws the view with the given printer (includes bounds) and focus.",16,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"find_any","","Finds the view identified by the given selector.",16,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"focus_view","","Moves the focus to the view identified by the given selector.",16,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"take_focus","","This view is offered focus. Will it take it?",16,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[8,"Finder","","Provides `find<V: View>` to views.",null,null],[10,"find","","Tries to find the view pointed to by the given selector.",17,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"f"}],"output":{"name":"option"}}],[11,"find_id","","Convenient method to use `find` with a `view::Selector::Id`.",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"option"}}],[0,"views","cursive","Various views to use when creating the layout.",null,null],[3,"BoxView","cursive::views","Wrapper around another view, with a controlled size.",null,null],[3,"Button","","Simple text label with a callback when <Enter> is pressed.",null,null],[3,"Canvas","","A blank view that forwards calls to closures.",null,null],[3,"Checkbox","","Checkable box.",null,null],[3,"Dialog","","Popup-like view with a main content, and optional buttons under it.",null,null],[3,"DummyView","","Dummy view.",null,null],[3,"EditView","","Input box where the user can enter and edit text.",null,null],[3,"IdView","","Wrapper around a view to provide interior mutability.",null,null],[3,"KeyEventView","","A simple wrapper view that catches some ignored event from its child.",null,null],[3,"Layer","","Wrapper view that fills the background.",null,null],[3,"LinearLayout","","Arranges its children linearly according to its orientation.",null,null],[3,"ListView","","Displays a scrollable list of elements.",null,null],[3,"MenuPopup","","Popup that shows a list of items.",null,null],[3,"Menubar","","Shows a single-line list of items, with pop-up menus when one is selected.",null,null],[12,"autohide","","TODO: move this out of this view.",18,null],[3,"Panel","","Draws a border around a wrapped view.",null,null],[3,"Counter","","Atomic counter used by `ProgressBar`.",null,null],[12,"0","","",19,null],[3,"ProgressBar","","Animated bar showing a progress value.",null,null],[3,"RadioGroup","","Group to coordinate multiple radio buttons.",null,null],[3,"RadioButton","","Variant of `Checkbox` arranged in group.",null,null],[3,"SelectView","","View to select an item among a list.",null,null],[3,"ShadowView","","Wrapper view that adds a shadow.",null,null],[3,"SizedView","","Wrapper around a view that remembers its size.",null,null],[12,"view","","Wrapped view.",20,null],[12,"size","","Cached size from the last layout() call.",20,null],[3,"SliderView","","A horizontal or vertical slider.",null,null],[3,"StackView","","Simple stack of views. Only the top-most view is active and can receive input.",null,null],[3,"TextArea","","Multi-lines text editor.",null,null],[3,"TextView","","A simple view showing a fixed text",null,null],[3,"TrackedView","","Wrapper around a view that remembers its position.",null,null],[12,"view","","Wrapped view.",21,null],[11,"new","","Creates a new `BoxView` with the given width and height requirements.",22,{"inputs":[{"name":"sizeconstraint"},{"name":"sizeconstraint"},{"name":"t"}],"output":{"name":"self"}}],[11,"squishable","","Sets `self` to be squishable.",22,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"with_fixed_size","","Wraps `view` in a new `BoxView` with the given size.",22,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_fixed_width","","Wraps `view` in a new `BoxView` with fixed width.",22,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_fixed_height","","Wraps `view` in a new `BoxView` with fixed height.",22,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_full_screen","","Wraps `view` in a `BoxView` which will take all available space.",22,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_full_width","","Wraps `view` in a `BoxView` which will take all available width.",22,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_full_height","","Wraps `view` in a `BoxView` which will take all available height.",22,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_max_size","","Wraps `view` in a `BoxView` which will never be bigger than `size`.",22,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_max_width","","Wraps `view` in a `BoxView` which will enforce a maximum width.",22,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_max_height","","Wraps `view` in a `BoxView` which will enforce a maximum height.",22,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_min_size","","Wraps `view` in a `BoxView` which will never be smaller than `size`.",22,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_min_width","","Wraps `view` in a `BoxView` which will enforce a minimum width.",22,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_min_height","","Wraps `view` in a `BoxView` which will enforce a minimum height.",22,{"inputs":[{"name":"usize"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_view","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_required_size","","",22,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"new","","Creates a new button with the given content and callback.",23,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"self"}}],[11,"disable","","Disables this view.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"disabled","","Disables this view.",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"enable","","Re-enables this view.",23,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enabled","","Enable or disable this view.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"is_enabled","","Returns `true` if this view is enabled.",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"draw","","",23,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"required_size","","",23,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"on_event","","",23,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",23,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"new","","Creates a new, empty Canvas.",24,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"state_mut","","Gets a mutable reference to the inner state.",24,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set_draw","","Sets the closure for `draw(&Printer)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_draw","","Sets the closure for `draw(&Printer)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_on_event","","Sets the closure for `on_event(Event)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_on_event","","Sets the closure for `on_event(Event)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_required_size","","Sets the closure for `required_size(Vec2)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_required_size","","Sets the closure for `required_size(Vec2)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_layout","","Sets the closure for `layout(Vec2)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_layout","","Sets the closure for `layout(Vec2)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_take_focus","","Sets the closure for `take_focus(Direction)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_take_focus","","Sets the closure for `take_focus(Direction)`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_needs_relayout","","Sets the closure for `needs_relayout()`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_needs_relayout","","Sets the closure for `needs_relayout()`.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"draw","","",24,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",24,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"required_size","","",24,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"layout","","",24,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"take_focus","","",24,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"disable","","Disables this view.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"disabled","","Disables this view.",25,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"enable","","Re-enables this view.",25,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enabled","","Enable or disable this view.",25,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"is_enabled","","Returns `true` if this view is enabled.",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new, unchecked checkbox.",25,{"inputs":[],"output":{"name":"self"}}],[11,"set_on_change","","Sets a callback to be used when the state changes.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"on_change","","Sets a callback to be used when the state changes.",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"toggle","","Toggles the checkbox state.",25,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"check","","Check the checkbox.",25,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"checked","","Check the checkbox.",25,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"is_checked","","Returns `true` if the checkbox is checked.",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"uncheck","","Uncheck the checkbox.",25,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"unchecked","","Uncheck the checkbox.",25,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"set_checked","","Sets the checkbox state.",25,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"eventresult"}}],[11,"required_size","","",25,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"take_focus","","",25,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"draw","","",25,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",25,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new `Dialog` with empty content.",26,{"inputs":[],"output":{"name":"self"}}],[11,"around","","Creates a new `Dialog` with the given content.",26,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[11,"content","","Sets the content for this dialog.",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"self"}}],[11,"set_content","","Sets the content for this dialog.",26,{"inputs":[{"name":"self"},{"name":"v"}],"output":null}],[11,"text","","Convenient method to create a dialog with a simple text content.",26,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"info","","Convenient method to create an infobox.",26,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"button","","Adds a button to the dialog with the given label and callback.",26,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":{"name":"self"}}],[11,"h_align","","Sets the horizontal alignment for the buttons, if any.",26,{"inputs":[{"name":"self"},{"name":"halign"}],"output":{"name":"self"}}],[11,"v_align","","Sets the vertical alignment for the buttons, if any.",26,{"inputs":[{"name":"self"},{"name":"valign"}],"output":{"name":"self"}}],[11,"dismiss_button","","Shortcut method to add a button that will dismiss the dialog.",26,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"title","","Sets the title of the dialog.",26,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"set_title","","Sets the title of the dialog.",26,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"padding","","Sets the padding in the dialog (around content and buttons).",26,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"padding_top","","Sets the top padding in the dialog (under the title).",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"padding_bottom","","Sets the bottom padding in the dialog (under buttons).",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"padding_left","","Sets the left padding in the dialog.",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"padding_right","","Sets the right padding in the dialog.",26,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"draw","","",26,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"required_size","","",26,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"layout","","",26,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"on_event","","",26,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",26,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"find_any","","",26,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"focus_view","","",26,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"draw","","",27,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"default","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new, empty edit view.",28,{"inputs":[],"output":{"name":"self"}}],[11,"set_secret","","If `secret` is `true`, the content won't be displayed in clear.",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"secret","","Hides the content of the view.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"disable","","Disables this view.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"disabled","","Disables this view.",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"enable","","Re-enables this view.",28,{"inputs":[{"name":"self"}],"output":null}],[11,"set_on_edit_mut","","Sets a mutable callback to be called whenever the content is modified.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_on_edit","","Sets a callback to be called whenever the content is modified.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"on_edit_mut","","Sets a mutable callback to be called whenever the content is modified.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"on_edit","","Sets a callback to be called whenever the content is modified.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_on_submit_mut","","Sets a mutable callback to be called when `<Enter>` is pressed.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"set_on_submit","","Sets a callback to be called when `<Enter>` is pressed.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"on_submit_mut","","Sets a mutable callback to be called when `<Enter>` is pressed.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"on_submit","","Sets a callback to be called when `<Enter>` is pressed.",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_enabled","","Enable or disable this view.",28,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"is_enabled","","Returns `true` if this view is enabled.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_content","","Replace the entire content of the view with the given one.",28,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"get_content","","Get the current text.",28,{"inputs":[{"name":"self"}],"output":{"name":"rc"}}],[11,"content","","Sets the current content to the given value.",28,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"set_cursor","","Sets the cursor position.",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"insert","","Insert `ch` at the current cursor position.",28,{"inputs":[{"name":"self"},{"name":"char"}],"output":null}],[11,"remove","","Remove the character at the current cursor position.",28,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"draw","","",28,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"layout","","",28,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"take_focus","","",28,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"on_event","","",28,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"new","","Wraps `view` in a new `IdView`.",29,{"inputs":[{"name":"s"},{"name":"v"}],"output":{"name":"self"}}],[11,"get_mut","","Gets mutable access to the inner view.",29,{"inputs":[{"name":"self"}],"output":{"name":"viewref"}}],[11,"with_view","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_find_any","","",29,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"wrap_focus_view","","",29,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"new","","Wraps the given view in a new KeyEventView.",30,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"register","","Registers a callback when the given key is ignored by the child.",30,{"inputs":[{"name":"self"},{"name":"e"},{"name":"f"}],"output":{"name":"self"}}],[11,"with_view","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_on_event","","",30,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"new","","Wraps the given view.",31,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_view","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_draw","","",31,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"new","","Creates a new layout with the given orientation.",32,{"inputs":[{"name":"orientation"}],"output":{"name":"self"}}],[11,"weight","","Modifies the weight of the last child added.",32,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"child","","Adds a child to the layout.",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"self"}}],[11,"add_child","","Adds a child to the layout.",32,{"inputs":[{"name":"self"},{"name":"v"}],"output":null}],[11,"vertical","","Creates a new vertical layout.",32,{"inputs":[],"output":{"name":"self"}}],[11,"horizontal","","Creates a new horizontal layout.",32,{"inputs":[],"output":{"name":"self"}}],[11,"draw","","",32,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"needs_relayout","","",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"layout","","",32,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"required_size","","",32,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"take_focus","","",32,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"on_event","","",32,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"find_any","","",32,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"focus_view","","",32,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new, empty `ListView`.",33,{"inputs":[],"output":{"name":"self"}}],[11,"add_child","","Adds a view to the end of the list.",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":null}],[11,"clear","","Removes all children from this view.",33,{"inputs":[{"name":"self"}],"output":null}],[11,"child","","Adds a view to the end of the list.",33,{"inputs":[{"name":"self"},{"name":"str"},{"name":"v"}],"output":{"name":"self"}}],[11,"add_delimiter","","Adds a delimiter to the end of the list.",33,{"inputs":[{"name":"self"}],"output":null}],[11,"delimiter","","Adds a delimiter to the end of the list.",33,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"set_on_select","","Sets a callback to be used when an item is selected.",33,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"on_select","","Sets a callback to be used when an item is selected.",33,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"focus","","Returns the index of the currently focused item.",33,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"draw","","",33,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"required_size","","",33,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"layout","","",33,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"on_event","","",33,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",33,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"find_any","","",33,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"focus_view","","",33,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new, empty menubar.",18,{"inputs":[],"output":{"name":"self"}}],[11,"receive_events","","True if we should be receiving events.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"visible","","Returns `true` if we should be drawn.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"add_subtree","","Adds a new item to the menubar.",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"menutree"}],"output":{"name":"self"}}],[11,"insert_subtree","","Insert a new item at the given position.",18,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"str"},{"name":"menutree"}],"output":{"name":"self"}}],[11,"clear","","Removes all menu items from this menubar.",18,{"inputs":[{"name":"self"}],"output":null}],[11,"len","","Returns the number of items in this menubar.",18,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this menubar is empty.",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_subtree","","Returns the item at the given position.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"find_subtree","","Looks for an item with the given label.",18,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_position","","Returns the position of the item with the given label.",18,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"remove","","Remove the item at the given position.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"draw","","",18,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",18,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",18,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"required_size","","",18,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"new","","Creates a new `MenuPopup` using the given menu tree.",34,{"inputs":[{"name":"rc"}],"output":{"name":"self"}}],[11,"set_focus","","Sets the currently focused element.",34,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"focus","","Sets the currently focused element.",34,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"align","","Sets the alignment for this view.",34,{"inputs":[{"name":"self"},{"name":"align"}],"output":{"name":"self"}}],[11,"on_dismiss","","Sets a callback to be used when this view is actively dismissed.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"on_action","","Sets a callback to be used when a leaf is activated.",34,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"draw","","",34,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"required_size","","",34,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"on_event","","",34,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"layout","","",34,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"new","","Creates a new panel around the given view.",35,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[11,"with_view","","",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_required_size","","",35,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"wrap_draw","","",35,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"wrap_layout","","",35,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"counter"}}],[11,"new","","Creates a new `Counter` starting with the given value.",19,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"get","","Retrieves the current progress value.",19,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set","","Sets the current progress value.",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"tick","","Increase the current progress by `ticks`.",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"default","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new progress bar.",36,{"inputs":[],"output":{"name":"self"}}],[11,"with_value","","Sets the value to follow.",36,{"inputs":[{"name":"self"},{"name":"counter"}],"output":{"name":"self"}}],[11,"start","","Starts a function in a separate thread, and monitor the progress.",36,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"with_task","","Starts a function in a separate thread, and monitor the progress.",36,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"with_label","","Sets the label generator.",36,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"min","","Sets the minimum value.",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"max","","Sets the maximum value.",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"range","","Sets the `min` and `max` range for the value.",36,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"set_value","","Sets the current value.",36,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"draw","","",36,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"radiogroup"}}],[11,"new","","Creates an empty group for radio buttons.",37,{"inputs":[],"output":{"name":"self"}}],[11,"button","","Adds a new button to the group.",37,{"inputs":[{"name":"self"},{"name":"t"},{"name":"s"}],"output":{"name":"radiobutton"}}],[11,"selected_id","","Returns the id of the selected button.",37,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"selection","","Returns the value associated with the selected button.",37,{"inputs":[{"name":"self"}],"output":{"name":"rc"}}],[11,"button_str","","Adds a button, using the label itself as value.",37,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"radiobutton"}}],[11,"disable","","Disables this view.",38,{"inputs":[{"name":"self"}],"output":null}],[11,"disabled","","Disables this view.",38,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"enable","","Re-enables this view.",38,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enabled","","Enable or disable this view.",38,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"is_enabled","","Returns `true` if this view is enabled.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_selected","","Returns `true` if this button is selected.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"select","","Selects this button, un-selecting any other in the same group.",38,{"inputs":[{"name":"self"}],"output":null}],[11,"selected","","Selects this button, un-selecting any other in the same group.",38,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"required_size","","",38,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"take_focus","","",38,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"draw","","",38,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",38,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"new","","Creates a new empty SelectView.",39,{"inputs":[],"output":{"name":"self"}}],[11,"popup","","Turns `self` into a popup select view.",39,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"set_popup","","Turns `self` into a popup select view.",39,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"disable","","Disables this view.",39,{"inputs":[{"name":"self"}],"output":null}],[11,"disabled","","Disables this view.",39,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"enable","","Re-enables this view.",39,{"inputs":[{"name":"self"}],"output":null}],[11,"set_enabled","","Enable or disable this view.",39,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"is_enabled","","Returns `true` if this view is enabled.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_on_select","","Sets a callback to be used when an item is selected.",39,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"on_select","","Sets a callback to be used when an item is selected.",39,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"set_on_submit","","Sets a callback to be used when `<Enter>` is pressed.",39,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"on_submit","","Sets a callback to be used when `<Enter>` is pressed.",39,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"align","","Sets the alignment for this view.",39,{"inputs":[{"name":"self"},{"name":"align"}],"output":{"name":"self"}}],[11,"v_align","","Sets the vertical alignment for this view. (If the view is given too much space vertically.)",39,{"inputs":[{"name":"self"},{"name":"valign"}],"output":{"name":"self"}}],[11,"h_align","","Sets the horizontal alignment for this view.",39,{"inputs":[{"name":"self"},{"name":"halign"}],"output":{"name":"self"}}],[11,"selection","","Returns the value of the currently selected item.",39,{"inputs":[{"name":"self"}],"output":{"name":"rc"}}],[11,"clear","","Removes all items from this view.",39,{"inputs":[{"name":"self"}],"output":null}],[11,"add_item","","Adds a item to the list, with given label and value.",39,{"inputs":[{"name":"self"},{"name":"s"},{"name":"t"}],"output":null}],[11,"remove_item","","Removes an item from the list.",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"item","","Chainable variant of add_item",39,{"inputs":[{"name":"self"},{"name":"s"},{"name":"t"}],"output":{"name":"self"}}],[11,"add_all","","Adds all items from from an iterator.",39,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"with_all","","Adds all items from from an iterator.",39,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"selected_id","","Returns the id of the item currently selected.",39,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"len","","Returns the number of items in this list.",39,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this list has no item.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"add_item_str","","Convenient method to use the label as value.",39,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"item_str","","Chainable variant of add_item_str",39,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"add_all_str","","Adds all strings from an iterator.",39,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"with_all_str","","Adds all strings from an iterator.",39,{"inputs":[{"name":"self"},{"name":"i"}],"output":{"name":"self"}}],[11,"draw","","",39,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"required_size","","",39,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"on_event","","",39,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",39,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"layout","","",39,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"new","","Creates a new `SliderView` in the given orientation.",40,{"inputs":[{"name":"orientation"},{"name":"usize"}],"output":{"name":"self"}}],[11,"vertical","","Creates a new vertical `SliderView`.",40,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"horizontal","","Creates a new horizontal `SliderView`.",40,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"set_value","","Sets the current value.",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"eventresult"}}],[11,"value","","Sets the current value.",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"on_change","","Sets a callback to be called when the slider is moved.",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"on_enter","","Sets a callback to be called when the <Enter> key is pressed.",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"draw","","",40,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"required_size","","",40,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"on_event","","",40,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",40,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"new","","Wraps the given view.",41,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"left_padding","","If set, adds an empty column to the left of the view.",41,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"top_padding","","If set, adds an empty row at the top of the view.",41,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"with_view","","",41,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",41,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_required_size","","",41,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"wrap_layout","","",41,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"wrap_draw","","",41,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"new","","Wraps the given view.",20,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_view","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_layout","","",20,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new empty StackView",42,{"inputs":[],"output":{"name":"self"}}],[11,"add_fullscreen_layer","","Adds a new full-screen layer on top of the stack.",42,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_layer","","Adds new view on top of the stack in the center of the screen.",42,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_layer_at","","Adds a view on top of the stack.",42,{"inputs":[{"name":"self"},{"name":"position"},{"name":"t"}],"output":null}],[11,"pop_layer","","Remove the top-most layer.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"offset","","Computes the offset of the current top view.",42,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"layer_sizes","","Returns the size for each layer in this view.",42,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"draw","","",42,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",42,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"layout","","",42,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"required_size","","",42,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"take_focus","","",42,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"find_any","","",42,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"focus_view","","",42,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new, empty TextArea.",43,{"inputs":[],"output":{"name":"self"}}],[11,"get_content","","Retrieves the content of the view.",43,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_content","","Sets the content of the view.",43,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"content","","Sets the content of the view.",43,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"draw","","",43,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",43,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"take_focus","","",43,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"layout","","",43,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"new","","Creates a new TextView with the given content.",44,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"empty","","Creates a new empty `TextView`.",44,{"inputs":[],"output":{"name":"self"}}],[11,"set_scrollable","","Enable or disable the view's scrolling capabilities.",44,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"scrollable","","Enable or disable the view's scrolling capabilities.",44,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"h_align","","Sets the horizontal alignment for this view.",44,{"inputs":[{"name":"self"},{"name":"halign"}],"output":{"name":"self"}}],[11,"v_align","","Sets the vertical alignment for this view.",44,{"inputs":[{"name":"self"},{"name":"valign"}],"output":{"name":"self"}}],[11,"align","","Sets the alignment for this view.",44,{"inputs":[{"name":"self"},{"name":"align"}],"output":{"name":"self"}}],[11,"center","","Center the text horizontally and vertically inside the view.",44,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"content","","Replace the text in this view.",44,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"set_content","","Replace the text in this view.",44,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"append_content","","Append content to the end of a TextView.",44,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"get_content","","Returns the current text in this view.",44,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_scroll_strategy","","Defines the way scrolling is adjusted on content or size change.",44,{"inputs":[{"name":"self"},{"name":"scrollstrategy"}],"output":null}],[11,"scroll_strategy","","Defines the way scrolling is adjusted on content or size change.",44,{"inputs":[{"name":"self"},{"name":"scrollstrategy"}],"output":{"name":"self"}}],[11,"draw","","",44,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"on_event","","",44,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"needs_relayout","","",44,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"required_size","","",44,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"take_focus","","",44,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"layout","","",44,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"offset","","Return the last offset at which the view was drawn.",21,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"new","","Creates a new `TrackedView` around `view`.",21,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"with_id","","Wraps itself in a `IdView` for easy retrieval.",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"idview"}}],[11,"with_view","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"with_view_mut","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"option"}}],[11,"wrap_draw","","",21,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[6,"ViewRef","","Mutable reference to a view.",null,null],[0,"vec","cursive","Points on the 2D character grid.",null,null],[3,"Vec4","cursive::vec","Four values representing each direction.",null,null],[12,"left","","Left margin",45,null],[12,"right","","Right margin",45,null],[12,"top","","Top margin",45,null],[12,"bottom","","Bottom margin",45,null],[6,"Vec2","","Simple 2D size, in cells.",null,null],[11,"partial_cmp","cursive","`a < b` <=> `a.x < b.x && a.y < b.y`",1,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"option"}}],[11,"fits_in","","Returns `true` if `self` could fit inside `other`.",1,{"inputs":[{"name":"self"},{"name":"o"}],"output":{"name":"bool"}}],[11,"max","","Returns a new Vec2 that is a maximum per coordinate.",1,{"inputs":[{"name":"a"},{"name":"b"}],"output":{"name":"self"}}],[11,"min","","Returns a new Vec2 that is no larger than any input in both dimensions.",1,{"inputs":[{"name":"a"},{"name":"b"}],"output":{"name":"self"}}],[11,"or_min","","Returns the minimum of `self` and `other`.",1,{"inputs":[{"name":"self"},{"name":"o"}],"output":{"name":"self"}}],[11,"or_max","","Returns the maximum of `self` and `other`.",1,{"inputs":[{"name":"self"},{"name":"o"}],"output":{"name":"self"}}],[11,"stack_vertical","","Returns (max(self.x,other.x), self.y+other.y)",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"stack_horizontal","","Returns (self.x+other.x, max(self.y,other.y))",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"keep_x","","Returns a vector with the X component of self, and y=0.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"keep_y","","Returns a vector with the Y component of self, and x=0.",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"zero","","Alias for `Self::new(0,0)`.",1,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",1,null],[11,"from","","",1,null],[11,"add","","",1,{"inputs":[{"name":"self"},{"name":"o"}],"output":{"name":"self"}}],[11,"sub","","",1,{"inputs":[{"name":"self"},{"name":"o"}],"output":{"name":"self"}}],[11,"div","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"mul","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vec2"}}],[11,"clone","cursive::vec","",45,{"inputs":[{"name":"self"}],"output":{"name":"vec4"}}],[11,"new","","Creates a new Vec4.",45,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"horizontal","","Returns left + right.",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"vertical","","Returns top + bottom.",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"combined","","Returns (left+right, top+bottom).",45,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"top_left","","Returns (left, top).",45,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"bot_right","","Returns (right, bottom).",45,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"from","","",45,null],[11,"from","","",45,null],[11,"from","","",45,null],[11,"from","","",45,null],[11,"add","","",45,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"vec4"}}],[11,"sub","","",45,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"vec4"}}],[11,"div","","",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vec4"}}],[11,"mul","","",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"vec4"}}],[0,"theme","cursive","Handle colors and themes in the UI.",null,null],[3,"Theme","cursive::theme","Represents the style a Cursive application will use.",null,null],[12,"shadow","","Whether views in a StackView should have shadows.",46,null],[12,"borders","","How view borders should be drawn.",46,null],[12,"colors","","What colors should be used through the application?",46,null],[3,"Palette","","Color configuration for the application.",null,null],[12,"background","","Color used for the application background.",47,null],[12,"shadow","","Color used for View shadows.",47,null],[12,"view","","Color used for View backgrounds.",47,null],[12,"primary","","Primary color used for the text.",47,null],[12,"secondary","","Secondary color used for the text.",47,null],[12,"tertiary","","Tertiary color used for the text.",47,null],[12,"title_primary","","Primary color used for title text.",47,null],[12,"title_secondary","","Secondary color used for title text.",47,null],[12,"highlight","","Color used for highlighting text.",47,null],[12,"highlight_inactive","","Color used for highlighting inactive text.",47,null],[4,"Effect","","Text effect",null,null],[13,"Simple","","No effect",48,null],[13,"Reverse","","Reverses foreground and background colors",48,null],[4,"ColorStyle","","Possible color style for a cell.",null,null],[13,"Background","","Application background, where no view is present.",49,null],[13,"Shadow","","Color used by view shadows. Only background matters.",49,null],[13,"Primary","","Main text with default background.",49,null],[13,"Secondary","","Secondary text color, with default background.",49,null],[13,"Tertiary","","Tertiary text color, with default background.",49,null],[13,"TitlePrimary","","Title text color with default background.",49,null],[13,"TitleSecondary","","Alternative color for a title.",49,null],[13,"Highlight","","Alternate text with highlight background.",49,null],[13,"HighlightInactive","","Highlight color for inactive views (not in focus).",49,null],[4,"BorderStyle","","Specifies how some borders should be drawn.",null,null],[13,"Simple","","Simple borders.",50,null],[13,"Outset","","Outset borders with a simple 3d effect.",50,null],[4,"BaseColor","","One of the 8 base colors.",null,null],[13,"Black","","Black color",51,null],[13,"Red","","Red color",51,null],[13,"Green","","Green color",51,null],[13,"Yellow","","Yellow color (Red + Green)",51,null],[13,"Blue","","Blue color",51,null],[13,"Magenta","","Magenta color (Red + Blue)",51,null],[13,"Cyan","","Cyan color (Green + Blue)",51,null],[13,"White","","White color (Red + Green + Blue)",51,null],[4,"Color","","Represents a color used by the theme.",null,null],[13,"Dark","","One of the 8 base colors.",52,null],[13,"Light","","Lighter version of a base color.",52,null],[13,"Rgb","","True-color, 24-bit.",52,null],[13,"RgbLowRes","","Low-resolution",52,null],[4,"Error","","Possible error returned when loading a theme.",null,null],[13,"Io","","An error occured when reading the file.",53,null],[13,"Parse","","An error occured when parsing the toml content.",53,null],[5,"load_theme_file","","Loads a theme from file and sets it as active.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"load_theme","","Loads a theme string and sets it as active.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"load_default","","Loads the default theme, and returns its representation.",null,{"inputs":[],"output":{"name":"theme"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"effect"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"colorstyle"}}],[11,"id","","Returns the ncurses pair ID associated with this color pair.",49,{"inputs":[{"name":"self"}],"output":{"name":"i16"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"theme"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"activate","","Sets a theme as active.",46,{"inputs":[{"name":"self"},{"name":"concrete"}],"output":null}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"borderstyle"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"palette"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"basecolor"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",53,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",53,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"align","cursive","Tools to control view alignment.",null,null],[3,"Align","cursive::align","Specifies the alignment along both horizontal and vertical directions.",null,null],[12,"h","","Horizontal alignment policy",54,null],[12,"v","","Vertical alignment policy",54,null],[4,"HAlign","","Horizontal alignment",null,null],[13,"Left","","Place the element to the left of available space",55,null],[13,"Center","","Place the element horizontally in the center of available space",55,null],[13,"Right","","Place the element to the right of available space",55,null],[4,"VAlign","","Vertical alignment",null,null],[13,"Top","","Place the element at the top of available space",56,null],[13,"Center","","Place the element vertically in the center of available space",56,null],[13,"Bottom","","Place the element at the bottom of available space",56,null],[11,"new","","Creates a new Align object from the given alignments.",54,{"inputs":[{"name":"halign"},{"name":"valign"}],"output":{"name":"self"}}],[11,"top_left","","Creates a top-left alignment.",54,{"inputs":[],"output":{"name":"self"}}],[11,"top_right","","Creates a top-right alignment.",54,{"inputs":[],"output":{"name":"self"}}],[11,"bot_left","","Creates a bottom-left alignment.",54,{"inputs":[],"output":{"name":"self"}}],[11,"bot_right","","Creates a bottom-right alignment.",54,{"inputs":[],"output":{"name":"self"}}],[11,"center","","Creates an alignment centered both horizontally and vertically.",54,{"inputs":[],"output":{"name":"self"}}],[11,"get_offset","","Returns the offset required to position a view.",55,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"get_offset","","Returns the offset required to position a view.",56,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"menu","cursive","Build menu trees.",null,null],[3,"MenuTree","cursive::menu","Root of a menu tree.",null,null],[12,"children","","Menu items",57,null],[4,"MenuItem","","Node in the menu tree.",null,null],[13,"Leaf","","Actionnable button with a label.",58,null],[13,"Subtree","","Sub-menu with a label.",58,null],[13,"Delimiter","","Delimiter without a label.",58,null],[11,"default","","",57,{"inputs":[],"output":{"name":"menutree"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"menutree"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"menuitem"}}],[11,"label","","Returns the label for this item.",58,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_delimiter","","Returns `true` if `self` is a delimiter.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_subtree","","Returns `true` if `self` is a subtree.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"new","","Creates a new, empty tree.",57,{"inputs":[],"output":{"name":"self"}}],[11,"clear","","Remove every children from this tree.",57,{"inputs":[{"name":"self"}],"output":null}],[11,"insert_delimiter","","Inserts a delimiter at the given position.",57,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"add_delimiter","","Adds a delimiter to the end of this tree.",57,{"inputs":[{"name":"self"}],"output":null}],[11,"delimiter","","Adds a delimiter to the end of this tree - chainable variant.",57,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"add_leaf","","Adds a actionnable leaf to the end of this tree.",57,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":null}],[11,"insert_leaf","","Inserts a leaf at the given position.",57,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"s"},{"name":"f"}],"output":null}],[11,"leaf","","Adds a actionnable leaf to the end of this tree - chainable variant.",57,{"inputs":[{"name":"self"},{"name":"s"},{"name":"f"}],"output":{"name":"self"}}],[11,"insert_subtree","","Inserts a subtree at the given position.",57,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"s"},{"name":"menutree"}],"output":null}],[11,"add_subtree","","Adds a submenu to the end of this tree.",57,{"inputs":[{"name":"self"},{"name":"s"},{"name":"menutree"}],"output":null}],[11,"subtree","","Adds a submenu to the end of this tree - chainable variant.",57,{"inputs":[{"name":"self"},{"name":"s"},{"name":"menutree"}],"output":{"name":"self"}}],[11,"find_item","","Looks for a child with the given title.",57,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_position","","Returns the position of a child with the given label.",57,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_subtree","","Looks for a subtree child with the given label.",57,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"remove","","Removes the item at the given position.",57,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"len","","Returns the number of direct children in this node.",57,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this tree has no children.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"direction","cursive","Direction-related structures.",null,null],[4,"Orientation","cursive::direction","Describes a vertical or horizontal orientation for a view.",null,null],[13,"Horizontal","","Horizontal orientation",59,null],[13,"Vertical","","Vertical orientation",59,null],[4,"Direction","","Represents a direction, either absolute or orientation-dependent.",null,null],[13,"Abs","","An absolute direction.",60,null],[13,"Rel","","A direction relative to the current orientation.",60,null],[4,"Relative","","Direction relative to an orientation.",null,null],[13,"Front","","Front relative direction.",61,null],[13,"Back","","Back relative direction.",61,null],[4,"Absolute","","Absolute direction (up, down, left, right).",null,null],[13,"Left","","Left",62,null],[13,"Up","","Up",62,null],[13,"Right","","Right",62,null],[13,"Down","","Down",62,null],[13,"None","","No real direction.",62,null],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[11,"get","","Returns the component of `v` corresponding to this orientation.",59,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"t"}}],[11,"swap","","Returns the other orientation.",59,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"get_ref","","Returns a mutable reference to the component of the given vector corresponding to this orientation.",59,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"t"}}],[11,"stack","","Takes an iterator on sizes, and stack them in the current orientation, returning the size of the required bounding box.",59,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"vec2"}}],[11,"make_vec","","Creates a new `Vec2` with `value` in `self`'s axis.",59,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"vec2"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"direction"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"relative","","Returns the relative direction for the given orientation.",60,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"option"}}],[11,"absolute","","Returns the absolute direction in the given `orientation`.",60,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"absolute"}}],[11,"back","","Shortcut to create `Direction::Rel(Relative::Back)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"front","","Shortcut to create `Direction::Rel(Relative::Front)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"left","","Shortcut to create `Direction::Abs(Absolute::Left)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"right","","Shortcut to create `Direction::Abs(Absolute::Right)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"up","","Shortcut to create `Direction::Abs(Absolute::Up)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"down","","Shortcut to create `Direction::Abs(Absolute::Down)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"none","","Shortcut to create `Direction::Abs(Absolute::None)`",60,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"relative"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"relative"}],"output":{"name":"bool"}}],[11,"absolute","","Returns the absolute direction in the given `orientation`.",61,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"absolute"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"absolute"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"absolute"}],"output":{"name":"bool"}}],[11,"relative","","Returns the relative direction for the given orientation.",62,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"option"}}],[0,"utils","cursive","Toolbox to make text layout easier.",null,null],[3,"LinesIterator","cursive::utils","Generates rows of text in constrained width.",null,null],[3,"Row","","Represents a row of text within a `String`.",null,null],[12,"start","","Beginning of the row in the parent `String`.",63,null],[12,"end","","End of the row (excluded)",63,null],[12,"width","","Width of the row, in cells.",63,null],[3,"ProgressReader","","Wrapper around a `Read` that reports the progress made.",null,null],[3,"Prefix","","The length and width of a part of a string.",null,null],[12,"length","","The length (in bytes) of the string.",64,null],[12,"width","","The unicode-width of the string.",64,null],[5,"prefix","","Computes the length (number of bytes) and width of a prefix that fits in the given `width`.",null,{"inputs":[{"name":"i"},{"name":"usize"},{"name":"str"}],"output":{"name":"prefix"}}],[5,"suffix","","Computes the length (number of bytes) and width of a suffix that fits in the given `width`.",null,{"inputs":[{"name":"i"},{"name":"usize"},{"name":"str"}],"output":{"name":"prefix"}}],[5,"simple_suffix","","Computes the length (number of bytes) and width of a suffix that fits in the given `width`.",null,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"prefix"}}],[11,"new","","Returns a new `LinesIterator` on `content`.",65,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"self"}}],[11,"show_spaces","","Leave a blank cell at the end of lines.",65,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"row"}}],[11,"shift","","Shift a row start and end by `offset`.",63,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shifted","","Shift a row start and end by `offset`.",63,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"rev_shift","","Shift back a row start and end by `offset`.",63,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"next","","",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a new `ProgressReader` around `reader`.",66,{"inputs":[{"name":"counter"},{"name":"r"}],"output":{"name":"self"}}],[11,"deconstruct","","Unwraps this `ProgressReader`, returning the reader and counter.",66,null],[11,"read","","",66,null],[11,"clear","cursive","Clear the screen.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"is_new","","Returns `true` if nothing has been printed yet.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"print","","Prints some text at the given position relative to the window.",0,{"inputs":[{"name":"self"},{"name":"s"},{"name":"str"}],"output":null}],[11,"print_vline","","Prints a vertical line using the given character.",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"},{"name":"str"}],"output":null}],[11,"print_hline","","Prints a horizontal line using the given character.",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"},{"name":"str"}],"output":null}],[11,"with_color","","Call the given closure with a colored printer, that will apply the given color on prints.",0,{"inputs":[{"name":"self"},{"name":"colorstyle"},{"name":"f"}],"output":null}],[11,"with_effect","","Same as `with_color`, but apply a ncurses style instead, like `ncurses::A_BOLD()` or `ncurses::A_REVERSE()`.",0,{"inputs":[{"name":"self"},{"name":"effect"},{"name":"f"}],"output":null}],[11,"print_box","","Prints a rectangular box.",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"s"},{"name":"bool"}],"output":null}],[11,"with_high_border","","Runs the given function using a color depending on the theme.",0,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"f"}],"output":null}],[11,"with_low_border","","Runs the given function using a color depending on the theme.",0,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"f"}],"output":null}],[11,"with_selection","","Apply a selection style and call the given function.",0,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"f"}],"output":null}],[11,"print_hdelim","","Prints a horizontal delimiter with side border `├` and `┤`.",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"usize"}],"output":null}],[11,"sub_printer","","Returns a printer on a subset of this one's area.",0,{"inputs":[{"name":"self"},{"name":"s"},{"name":"t"},{"name":"bool"}],"output":{"name":"printer"}}],[11,"offset","","Returns a sub-printer with the given offset.",0,{"inputs":[{"name":"self"},{"name":"s"},{"name":"bool"}],"output":{"name":"printer"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"xy"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `XY` from the given values.",1,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"map","","Creates a new `XY` by applying `f` to `x` and `y`.",1,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"xy"}}],[11,"pair","","Destructure self into a pair.",1,null],[11,"as_ref","","Return a `XY` with references to this one's values.",1,{"inputs":[{"name":"self"}],"output":{"name":"xy"}}],[11,"iter","","Creates an iterator that returns references to `x`, then `y`.",1,{"inputs":[{"name":"self"}],"output":{"name":"chain"}}],[11,"get","","Returns a reference to the value on the given axis.",1,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the value on the given axis.",1,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"t"}}],[11,"zip","","Returns a new `XY` of tuples made by zipping `self` and `other`.",1,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"xy"}}],[11,"zip_map","","Returns a new `XY` by calling `f` on `self` and `other` for each axis.",1,{"inputs":[{"name":"self"},{"name":"xy"},{"name":"f"}],"output":{"name":"xy"}}],[11,"with_axis","","Returns a new `XY` with the axis `o` set to `value`.",1,{"inputs":[{"name":"self"},{"name":"orientation"},{"name":"t"}],"output":{"name":"self"}}],[11,"with_axis_from","","Returns a new `XY` with the axis `o` set to the value from `other`.",1,{"inputs":[{"name":"self"},{"name":"orientation"},{"name":"self"}],"output":{"name":"self"}}],[11,"set_axis_from","","Sets the axis `o` on `self` to the value from `other`.",1,{"inputs":[{"name":"self"},{"name":"orientation"},{"name":"self"}],"output":null}],[11,"unwrap_or","","Returns a new `XY` by calling `unwrap_or` on each axis.",1,{"inputs":[{"name":"self"},{"name":"xy"}],"output":{"name":"xy"}}],[11,"any","","Returns `true` if any of `x` or `y` is `true`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"both","","Returns `true` if both `x` and `y` are `true`.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"both_from","","Creates a `XY` with both `x` and `y` set to `value`.",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",1,null],[6,"ScreenId","","Identifies a screen in the cursive root.",null,null],[8,"With","","Generic trait to enable chainable API",null,null],[11,"with","","Calls the given closure on `self`.",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new Cursive root, and initialize the back-end.",68,{"inputs":[],"output":{"name":"self"}}],[11,"cb_sink","","Returns a sink for asynchronous callbacks.",68,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"select_menubar","","Selects the menubar.",68,{"inputs":[{"name":"self"}],"output":null}],[11,"set_autohide_menu","","Sets the menubar autohide feature.",68,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"menubar","","Access the menu tree used by the menubar.",68,{"inputs":[{"name":"self"}],"output":{"name":"menubar"}}],[11,"current_theme","","Returns the currently used theme.",68,{"inputs":[{"name":"self"}],"output":{"name":"theme"}}],[11,"set_theme","","Sets the current theme.",68,{"inputs":[{"name":"self"},{"name":"theme"}],"output":null}],[11,"clear","","Clears the screen.",68,{"inputs":[{"name":"self"}],"output":null}],[11,"load_theme_file","","Loads a theme from the given file.",68,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"load_theme","","Loads a theme from the given string content.",68,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_fps","","Sets the refresh rate, in frames per second.",68,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"screen","","Returns a reference to the currently active screen.",68,{"inputs":[{"name":"self"}],"output":{"name":"stackview"}}],[11,"screen_mut","","Returns a mutable reference to the currently active screen.",68,{"inputs":[{"name":"self"}],"output":{"name":"stackview"}}],[11,"add_screen","","Adds a new screen, and returns its ID.",68,{"inputs":[{"name":"self"}],"output":{"name":"screenid"}}],[11,"add_active_screen","","Convenient method to create a new screen, and set it as active.",68,{"inputs":[{"name":"self"}],"output":{"name":"screenid"}}],[11,"set_screen","","Sets the active screen. Panics if no such screen exist.",68,{"inputs":[{"name":"self"},{"name":"screenid"}],"output":null}],[11,"find","","Tries to find the view pointed to by the given selector.",68,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"f"}],"output":{"name":"option"}}],[11,"call_on_id","","Tries to find the view identified by the given id.",68,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"option"}}],[11,"find_id","","Convenient method to find a view wrapped in [`IdView`].",68,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"focus_id","","Moves the focus to the view identified by `id`.",68,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"focus","","Moves the focus to the view identified by `sel`.",68,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"add_global_callback","","Adds a global callback.",68,{"inputs":[{"name":"self"},{"name":"e"},{"name":"f"}],"output":null}],[11,"add_layer","","Add a layer to the current screen.",68,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"add_fullscreen_layer","","Adds a new full-screen layer to the current screen.",68,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"pop_layer","","Convenient method to remove a layer from the current screen.",68,{"inputs":[{"name":"self"}],"output":null}],[11,"screen_size","","Returns the size of the screen, in characters.",68,{"inputs":[{"name":"self"}],"output":{"name":"vec2"}}],[11,"is_running","","Returns `true` until [`quit(&mut self)`] is called.",68,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"run","","Runs the event loop.",68,{"inputs":[{"name":"self"}],"output":null}],[11,"step","","Performs a single step from the event loop.",68,{"inputs":[{"name":"self"}],"output":null}],[11,"quit","","Stops the event loop.",68,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",68,{"inputs":[{"name":"self"}],"output":null}],[14,"wrap_impl","","Convenient macro to implement the [`ViewWrapper`] trait.",null,null],[11,"wrap_draw","cursive::view","Wraps the `draw` method.",15,{"inputs":[{"name":"self"},{"name":"printer"}],"output":null}],[11,"wrap_required_size","","Wraps the `required_size` method.",15,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"wrap_on_event","","Wraps the `on_event` method.",15,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"eventresult"}}],[11,"wrap_layout","","Wraps the `layout` method.",15,{"inputs":[{"name":"self"},{"name":"vec2"}],"output":null}],[11,"wrap_take_focus","","Wraps the `take_focus` method.",15,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"wrap_find_any","","Wraps the `find` method.",15,{"inputs":[{"name":"self"},{"name":"selector"},{"name":"box"}],"output":null}],[11,"wrap_focus_view","","Wraps the `focus_view` method.",15,{"inputs":[{"name":"self"},{"name":"selector"}],"output":{"name":"result"}}],[11,"wrap_needs_relayout","","Wraps the `needs_relayout` method.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"center","","Returns a position centered on both axis.",69,{"inputs":[],"output":{"name":"self"}}],[11,"absolute","","Returns a position absolute on both axis.",69,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"parent","","Returns a position relative to the parent on both axis.",69,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"compute_offset","","Computes the offset required to draw a view.",69,{"inputs":[{"name":"self"},{"name":"s"},{"name":"a"},{"name":"p"}],"output":{"name":"vec2"}}],[11,"with_id","","Wraps this view into an `IdView` with the given id.",14,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"idview"}}],[11,"boxed","","Wraps `self` in a `BoxView` with the given size constraints.",13,{"inputs":[{"name":"self"},{"name":"sizeconstraint"},{"name":"sizeconstraint"}],"output":{"name":"boxview"}}],[11,"fixed_size","","Wraps `self` into a fixed-size `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"boxview"}}],[11,"fixed_width","","Wraps `self` into a fixed-width `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"fixed_height","","Wraps `self` into a fixed-width `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"full_screen","","Wraps `self` into a full-screen `BoxView`.",13,{"inputs":[{"name":"self"}],"output":{"name":"boxview"}}],[11,"full_width","","Wraps `self` into a full-width `BoxView`.",13,{"inputs":[{"name":"self"}],"output":{"name":"boxview"}}],[11,"full_height","","Wraps `self` into a full-height `BoxView`.",13,{"inputs":[{"name":"self"}],"output":{"name":"boxview"}}],[11,"max_size","","Wraps `self` into a limited-size `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"boxview"}}],[11,"max_width","","Wraps `self` into a limited-width `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"max_height","","Wraps `self` into a limited-height `BoxView`.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"min_size","","Wraps `self` into a `BoxView` at least sized `size`.",13,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"boxview"}}],[11,"min_width","","Wraps `self` in a `BoxView` at least `min_width` wide.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"min_height","","Wraps `self` in a `BoxView` at least `min_height` tall.",13,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"boxview"}}],[11,"with","cursive","Calls the given closure on `self`.",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}]],"paths":[[3,"Printer"],[3,"XY"],[4,"EventResult"],[4,"Key"],[4,"Event"],[3,"Callback"],[3,"ScrollBase"],[3,"SizeCache"],[3,"ViewPath"],[4,"Offset"],[4,"ScrollStrategy"],[4,"SizeConstraint"],[4,"Selector"],[8,"Boxable"],[8,"Identifiable"],[8,"ViewWrapper"],[8,"View"],[8,"Finder"],[3,"Menubar"],[3,"Counter"],[3,"SizedView"],[3,"TrackedView"],[3,"BoxView"],[3,"Button"],[3,"Canvas"],[3,"Checkbox"],[3,"Dialog"],[3,"DummyView"],[3,"EditView"],[3,"IdView"],[3,"KeyEventView"],[3,"Layer"],[3,"LinearLayout"],[3,"ListView"],[3,"MenuPopup"],[3,"Panel"],[3,"ProgressBar"],[3,"RadioGroup"],[3,"RadioButton"],[3,"SelectView"],[3,"SliderView"],[3,"ShadowView"],[3,"StackView"],[3,"TextArea"],[3,"TextView"],[3,"Vec4"],[3,"Theme"],[3,"Palette"],[4,"Effect"],[4,"ColorStyle"],[4,"BorderStyle"],[4,"BaseColor"],[4,"Color"],[4,"Error"],[3,"Align"],[4,"HAlign"],[4,"VAlign"],[3,"MenuTree"],[4,"MenuItem"],[4,"Orientation"],[4,"Direction"],[4,"Relative"],[4,"Absolute"],[3,"Row"],[3,"Prefix"],[3,"LinesIterator"],[3,"ProgressReader"],[8,"With"],[3,"Cursive"],[6,"Position"]]};
initSearch(searchIndex);
